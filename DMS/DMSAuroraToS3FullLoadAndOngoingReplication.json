{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This CloudFormation sample template DMSAuroraToS3FullLoadAndOngoingReplication creates an Aurora RDS instance and DMS instance in a VPC, and an S3 bucket. The Aurora RDS instance is configured as the DMS Source Endpoint and the S3 bucket is configured as the DMS Target Endpoint. A DMS task is created and configured to migrate existing data and replicate ongoing changes from the source endpoint to the target endpoint. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "cfn-lint": {
            "config": {
                "ignore_checks": [
                    "I3013",
                    "W3005"
                ]
            }
        }
    },
    "Parameters": {
        "ClientIP": {
            "Description": "The IP address range that can be used to connect to the RDS instances from your local machine. It must be a valid IP CIDR range of the form x.x.x.x/x. Pls get your address using checkip.amazonaws.com or whatsmyip.org",
            "Type": "String",
            "Default": "0.0.0.0/0",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "It must be a valid IP CIDR range of the form x.x.x.x/x. Suggest to enable access to your IP address only. Pls get your address using checkip.amazonaws.com or whatsmyip.org."
        },
        "ExistsDMSVPCRole": {
            "Description": "If the dms-vpc-role exists in your account, please enter Y, else enter N",
            "Type": "String",
            "Default": "N",
            "MinLength": "1",
            "MaxLength": "1",
            "AllowedPattern": "[YN]",
            "ConstraintDescription": "Permitted value is Y or N."
        },
        "ExistsDMSCloudwatchRole": {
            "Description": "If the dms-cloudwatch-logs-role exists in your account, please enter Y, else enter N",
            "Type": "String",
            "Default": "N",
            "MinLength": "1",
            "MaxLength": "1",
            "AllowedPattern": "[YN]",
            "ConstraintDescription": "Permitted value is Y or N."
        },
        "SnapshotIdentifier": {
            "Type": "String",
            "Default": "arn:aws:rds:us-east-1:01234567890123:cluster-snapshot:dms-sampledb-snapshot"
        }
    },
    "Conditions": {
        "NotExistsDMSVPCRole": {
            "Fn::Equals": [
                {
                    "Ref": "ExistsDMSVPCRole"
                },
                "N"
            ]
        },
        "NotExistsDMSCloudwatchRole": {
            "Fn::Equals": [
                {
                    "Ref": "ExistsDMSCloudwatchRole"
                },
                "N"
            ]
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "DBSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.0.0/26",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": null
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "DBSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.0.64/26",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": null
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [
                "AttachGateway"
            ],
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "DBSubnet1"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "SubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "DBSubnet2"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "AuroraDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "Subnets available for the Aurora SampleDB DB Instance",
                "SubnetIds": [
                    {
                        "Ref": "DBSubnet1"
                    },
                    {
                        "Ref": "DBSubnet2"
                    }
                ]
            }
        },
        "AuroraSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for Aurora SampleDB DB Instance",
                "GroupName": "Aurora SampleDB Security Group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": {
                            "Ref": "ClientIP"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": "10.0.0.0/24"
                    }
                ]
            }
        },
        "AuroraClusterParameterGroup": {
            "Type": "AWS::RDS::DBClusterParameterGroup",
            "Properties": {
                "Description": "Enables bin_log prerequisites",
                "Family": "aurora5.6",
                "Parameters": {
                    "binlog_format": "ROW",
                    "binlog_checksum": "NONE"
                }
            }
        },
        "AuroraCluster": {
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::RDS::DBCluster",
            "Properties": {
                "DatabaseName": "dms_sample",
                "BackupRetentionPeriod": 7,
                "DBClusterParameterGroupName": {
                    "Ref": "AuroraClusterParameterGroup"
                },
                "DBSubnetGroupName": {
                    "Ref": "AuroraDBSubnetGroup"
                },
                "Engine": "aurora-postgresql",
                "SnapshotIdentifier": {
                    "Ref": "SnapshotIdentifier"
                },
                "VpcSecurityGroupIds": [
                    {
                        "Ref": "AuroraSecurityGroup"
                    }
                ],
                "StorageEncrypted": true
            }
        },
        "AuroraDB": {
            "DeletionPolicy": "Retain",
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::RDS::DBInstance",
            "DependsOn": [
                "AuroraCluster"
            ],
            "Metadata": {
                "guard": {
                    "SuppressedRules": [
                        "DB_INSTANCE_BACKUP_ENABLED",
                        "RDS_SNAPSHOT_ENCRYPTED",
                        "RDS_STORAGE_ENCRYPTED"
                    ]
                }
            },
            "Properties": {
                "DBClusterIdentifier": {
                    "Ref": "AuroraCluster"
                },
                "DBInstanceClass": "db.t3.medium",
                "DBInstanceIdentifier": "dms-sample",
                "DBSubnetGroupName": {
                    "Ref": "AuroraDBSubnetGroup"
                },
                "Engine": "aurora-postgresql",
                "MultiAZ": false,
                "PubliclyAccessible": false,
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Metadata": {
                "guard": {
                    "SuppressedRules": [
                        "S3_BUCKET_DEFAULT_LOCK_ENABLED",
                        "S3_BUCKET_VERSIONING_ENABLED",
                        "S3_BUCKET_REPLICATION_ENABLED",
                        "S3_BUCKET_LOGGING_ENABLED"
                    ]
                }
            },
            "Properties": {
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "BlockPublicPolicy": true,
                    "IgnorePublicAcls": true,
                    "RestrictPublicBuckets": true
                }
            }
        },
        "DMSCloudwatchRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "dms-cloudwatch-logs-role",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "dms.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole"
                ],
                "Path": "/"
            },
            "Condition": "NotExistsDMSCloudwatchRole"
        },
        "DMSVpcRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "dms-vpc-role",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "dms.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole"
                ],
                "Path": "/"
            },
            "Condition": "NotExistsDMSVPCRole"
        },
        "S3TargetDMSRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": [
                "S3Bucket"
            ],
            "Properties": {
                "RoleName": "dms-s3-target-role",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "dms.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "S3AccessForDMSPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "S3Bucket",
                                                "Arn"
                                            ]
                                        },
                                        {
                                            "Fn::Sub": "${S3Bucket.Arn}/*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "s3:ListBucket",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "S3Bucket",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "DMSReplicationSubnetGroup": {
            "Type": "AWS::DMS::ReplicationSubnetGroup",
            "Properties": {
                "ReplicationSubnetGroupDescription": "Subnets available for DMS",
                "SubnetIds": [
                    {
                        "Ref": "DBSubnet1"
                    },
                    {
                        "Ref": "DBSubnet2"
                    }
                ]
            }
        },
        "DMSSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security group for DMS Instance",
                "GroupName": "DMS Demo Security Group",
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "DMSReplicationInstance": {
            "Type": "AWS::DMS::ReplicationInstance",
            "DependsOn": [
                "DMSReplicationSubnetGroup",
                "DMSSecurityGroup"
            ],
            "Properties": {
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "DBSubnet1",
                        "AvailabilityZone"
                    ]
                },
                "PubliclyAccessible": false,
                "ReplicationInstanceClass": "dms.t3.medium",
                "ReplicationInstanceIdentifier": "aurora-s3-repinstance-sampledb",
                "ReplicationSubnetGroupIdentifier": {
                    "Ref": "DMSReplicationSubnetGroup"
                },
                "VpcSecurityGroupIds": [
                    {
                        "Ref": "DMSSecurityGroup"
                    }
                ]
            }
        },
        "AuroraSourceEndpoint": {
            "Type": "AWS::DMS::Endpoint",
            "DependsOn": [
                "DMSReplicationInstance",
                "AuroraCluster",
                "AuroraDB"
            ],
            "Properties": {
                "EndpointType": "source",
                "EngineName": "AURORA",
                "Password": "{{resolve:secretsmanager:aurora-source-enpoint-password:SecretString:password}}",
                "Port": 3306,
                "ServerName": {
                    "Fn::GetAtt": [
                        "AuroraCluster",
                        "Endpoint.Address"
                    ]
                },
                "Username": "admin"
            }
        },
        "S3TargetEndpoint": {
            "Type": "AWS::DMS::Endpoint",
            "DependsOn": [
                "DMSReplicationInstance",
                "S3Bucket",
                "S3TargetDMSRole"
            ],
            "Properties": {
                "EndpointType": "target",
                "EngineName": "S3",
                "ExtraConnectionAttributes": "addColumnName=true",
                "S3Settings": {
                    "BucketName": {
                        "Ref": "S3Bucket"
                    },
                    "ServiceAccessRoleArn": {
                        "Fn::GetAtt": [
                            "S3TargetDMSRole",
                            "Arn"
                        ]
                    }
                }
            }
        },
        "DMSReplicationTask": {
            "Type": "AWS::DMS::ReplicationTask",
            "DependsOn": [
                "AuroraSourceEndpoint",
                "S3TargetEndpoint",
                "DMSReplicationInstance"
            ],
            "Properties": {
                "MigrationType": "full-load-and-cdc",
                "ReplicationInstanceArn": {
                    "Ref": "DMSReplicationInstance"
                },
                "ReplicationTaskSettings": "{ \"Logging\" : { \"EnableLogging\" : true, \"LogComponents\": [ { \"Id\" : \"SOURCE_UNLOAD\", \"Severity\" : \"LOGGER_SEVERITY_DEFAULT\" }, { \"Id\" : \"SOURCE_CAPTURE\", \"Severity\" : \"LOGGER_SEVERITY_DEFAULT\" }, { \"Id\" : \"TARGET_LOAD\", \"Severity\" : \"LOGGER_SEVERITY_DEFAULT\" }, { \"Id\" : \"TARGET_APPLY\", \"Severity\" : \"LOGGER_SEVERITY_DEFAULT\" } ] } }",
                "SourceEndpointArn": {
                    "Ref": "AuroraSourceEndpoint"
                },
                "TableMappings": "{ \"rules\": [ { \"rule-type\" : \"selection\", \"rule-id\" : \"1\", \"rule-name\" : \"1\", \"object-locator\" : { \"schema-name\" : \"dms_sample\", \"table-name\" : \"%\" }, \"rule-action\" : \"include\" } ] }",
                "TargetEndpointArn": {
                    "Ref": "S3TargetEndpoint"
                }
            }
        }
    },
    "Outputs": {
        "StackName": {
            "Value": {
                "Ref": "AWS::StackName"
            }
        },
        "RegionName": {
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "S3BucketName": {
            "Value": {
                "Ref": "S3Bucket"
            }
        },
        "AuroraEndpoint": {
            "Value": {
                "Fn::GetAtt": [
                    "AuroraCluster",
                    "Endpoint.Address"
                ]
            }
        }
    }
}
