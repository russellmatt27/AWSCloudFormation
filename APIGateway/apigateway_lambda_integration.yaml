AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ApiType:
    Description: The Endpoint type for RESTApi
    Type: String
    AllowedValues:
      - EDGE
      - REGIONAL
      - PRIVATE
    Default: REGIONAL

  ApigatewayTimeout:
    Description: ApiGateway Backend Integration timeout in milliseconds
    Type: Number
    Default: "29000"
    MinValue: "50"
    MaxValue: "29000"

  LambdaFunctionName:
    Description: The Name for the Lambda Function
    Type: String
    Default: My-APIGW-Integ-Function

Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: My Rest API
      Name: MyApi
      EndpointConfiguration:
        Types:
          - !Ref ApiType

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      RestApiId: !Ref RestApi
      PathPart: '{city}'

  RequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      Name: MyModel
      RestApiId: !Ref RestApi
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: MyModel
        type: object
        properties:
          callerName:
            type: string

  ApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.city: "true"
        method.request.querystring.time: "true"
        method.request.header.day: "true"
      MethodResponses:
        - StatusCode: "200"
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS
        TimeoutInMillis: !Ref ApigatewayTimeout
        Uri: !Join
          - ""
          - - 'arn:'
            - !Ref AWS::Partition
            - ':apigateway:'
            - !Ref AWS::Region
            - :lambda:path/2015-03-31/functions/
            - !GetAtt LambdaFunction.Arn
            - /invocations
        RequestTemplates:
          application/json: |
            #set($inputRoot = $input.path('$'))
                {
                  "city": "$input.params('city')",
                  "time": "$input.params('time')",
                  "day":  "$input.params('day')",
                  "name": "$inputRoot.callerName"
                }
        IntegrationResponses:
          - StatusCode: "200"
      ResourceId: !Ref ApiResource
      RestApiId: !Ref RestApi
      RequestModels:
        application/json: !Ref RequestModel

  LambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3012
      guard:
        SuppressedRules:
          - LAMBDA_INSIDE_VPC
    Properties:
      Code:
        ZipFile: !Rain::Embed handler.py
      Handler: index.lambda_handler
      FunctionName: !Ref LambdaFunctionName
      MemorySize: "128"
      Runtime: python3.12
      Timeout: "10"
      Role: !GetAtt LambdaIamRole.Arn

  LambdaIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: LambdaRole
      Policies:
        - PolicyName: LambdaApipolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunctionName}:*

  LambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref RestApi
          - /*/*/*
