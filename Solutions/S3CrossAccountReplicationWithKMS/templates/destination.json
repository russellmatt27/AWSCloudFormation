{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Example of cross-account, same-region, S3 replication (v2) using server-side encryption with a customer-managed KMS key.  Create a symmetric KMS key with an alias, and a destination S3 bucket with default encryption and versioning enabled. Allow the source account access to the destination S3 bucket and KMS key for replication.",
    "Parameters": {
        "AccountIdSource": {
            "Description": "Account Id of the source AWS Account for replication (ie: 123456789012).",
            "Type": "String"
        }
    },
    "Resources": {
        "KmsKey": {
            "Type": "AWS::KMS::Key",
            "Properties": {
                "EnableKeyRotation": true,
                "KeyPolicy": {
                    "Version": "2012-10-17",
                    "Id": {
                        "Fn::Sub": "${AWS::StackName}-${AWS::AccountId}-key-policy"
                    },
                    "Statement": [
                        {
                            "Sid": "Allow destination account access to KMS key in destination account",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
                                }
                            },
                            "Action": "kms:*",
                            "Resource": "*"
                        },
                        {
                            "Sid": "Allow source account access to KMS key in destination account",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Sub": "arn:${AWS::Partition}:iam::${AccountIdSource}:root"
                                }
                            },
                            "Action": [
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*",
                                "kms:DescribeKey"
                            ],
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "KmsKeyAlias": {
            "Type": "AWS::KMS::Alias",
            "Properties": {
                "AliasName": {
                    "Fn::Sub": "alias/${AWS::StackName}-${AWS::AccountId}-kms-key"
                },
                "TargetKeyId": {
                    "Ref": "KmsKey"
                }
            }
        },
        "S3BucketDestination": {
            "DeletionPolicy": "Delete",
            "Type": "AWS::S3::Bucket",
            "Metadata": {
                "guard": {
                    "SuppressedRules": [
                        "S3_BUCKET_LOGGING_ENABLED",
                        "S3_BUCKET_REPLICATION_ENABLED",
                        "S3_BUCKET_DEFAULT_LOCK_ENABLED"
                    ]
                }
            },
            "Properties": {
                "BucketName": {
                    "Fn::Sub": "${AWS::StackName}-${AWS::AccountId}-bucket"
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "aws:kms",
                                "KMSMasterKeyID": {
                                    "Ref": "KmsKey"
                                }
                            },
                            "BucketKeyEnabled": true
                        }
                    ]
                },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "BlockPublicPolicy": true,
                    "IgnorePublicAcls": true,
                    "RestrictPublicBuckets": true
                },
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            }
        },
        "S3BucketDestinationPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "S3BucketDestination"
                },
                "PolicyDocument": {
                    "Id": {
                        "Fn::Sub": "${AWS::StackName}-${AWS::AccountId}-bucket-policy"
                    },
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Allow source account access to destination bucket",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Ref": "AccountIdSource"
                                }
                            },
                            "Action": [
                                "s3:ReplicateDelete",
                                "s3:ReplicateObject",
                                "s3:ReplicateTags",
                                "s3:GetObjectVersionTagging",
                                "s3:ObjectOwnerOverrideToBucketOwner"
                            ],
                            "Resource": {
                                "Fn::Sub": [
                                    "${varBucketArn}/*",
                                    {
                                        "varBucketArn": {
                                            "Fn::GetAtt": [
                                                "S3BucketDestination",
                                                "Arn"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "Action": "s3:*",
                            "Condition": {
                                "Bool": {
                                    "aws:SecureTransport": false
                                }
                            },
                            "Effect": "Deny",
                            "Principal": {
                                "AWS": "*"
                            },
                            "Resource": {
                                "Fn::Sub": [
                                    "${varBucketArn}/*",
                                    {
                                        "varBucketArn": {
                                            "Fn::GetAtt": [
                                                "S3BucketDestination",
                                                "Arn"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    }
}
